import numpy as np# global vectorspace parameters# k is number of nonzero elements# n is dimensionk = 500n = 1000# get random high dimensional vector for each headlinedef generate_vectors(headlines, k=k, n=n):    # let len(headlines) = m    # m x n matrix     m = len(headlines)    headline_vectors = np.zeros((m, n))    for i in np.arange(m):        permutation_idx = np.random.permutation(n)        headline_vectors[i,permutation_idx[:k/2]] = 1        headline_vectors[i,permutation_idx[k/2:k]] = -1    return headline_vectors# calculate vectors for each worddef generate_word_vectors(words, headlines, headline_vectors, k=k, n=n):    # let len(words) = l    # l x n matrix    l = len(words)    words_vectors = np.zeros((l,n))    for i in np.arange(len(words)):        for j in np.arange(len(headlines)):            if words[i][0] in headlines[j][0]:                words_vectors[i,:] += headline_vectors[j,:]    return words_vectors